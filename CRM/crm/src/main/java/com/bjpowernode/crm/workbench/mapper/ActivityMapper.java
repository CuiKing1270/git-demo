package com.bjpowernode.crm.workbench.mapper;

import com.bjpowernode.crm.workbench.pojo.Activity;
import org.apache.ibatis.annotations.Param;


import java.util.List;
import java.util.Map;

public interface ActivityMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sat Apr 30 14:08:28 CST 2022
     */
    int deleteByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sat Apr 30 14:08:28 CST 2022
     */
    int insert(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sat Apr 30 14:08:28 CST 2022
     */
    int insertSelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sat Apr 30 14:08:28 CST 2022
     */
    Activity selectByPrimaryKey(String id);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sat Apr 30 14:08:28 CST 2022
     */
    int updateByPrimaryKeySelective(Activity record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tbl_activity
     *
     * @mbggenerated Sat Apr 30 14:08:28 CST 2022
     */
    int updateByPrimaryKey(Activity record);

    /**
     *
     * @param activity 添加数据进入表单
     * @return
     */
    int insertActivity(Activity activity);

    /**
     *  根据条件查询分页条数, 返回一个list集合 传入的是一个map集合
     *  map集合中有需要的条件
     * @param map
     * @return
     */
    List<Activity> selectActivityByConditionForPage(Map<String,Object> map);

    /**
     *  查询记录的总条数
     * @param map
     * @return
     */
    int selectCountOfByCondition(Map<String,Object> map);

    /**
     *  通过id删除记录
     * @param ids
     * @return
     */
    int deleteActivityByIds(String[] ids);

    /**
     *  修改市场活动第一步
     * @param id
     * @return
     */
    Activity selectActivityById(String id);

    /**
     * 修改市场活动第二步
     * @return activity
     */
    int updateActivity(Activity activity);

    /**
     *  导出功能
     *  查询所有的市场活动。
     * @return
     */
    List<Activity> selectActivitys();

    /**
     *  选择导出市场活动
     */
    List<Activity> selectCheckedActivity(@Param("ids") String[] ids);

    /**
     *  导入市场活动
     * @param activityList
     * @return
     */
    int insertActivityByList(List<Activity> activityList);

    /**
     *  查看市场活动能够明细
     * @param id
     * @return
     */
    Activity selectActivityForDetailById(String id);
}